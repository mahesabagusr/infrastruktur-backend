// File: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Enums tidak diubah
enum Role {
  USER
  ADMIN
}

enum VerificationStatus {
  PENDING
  VERIFIED
  REJECTED
}

enum ProgressStage {
  REVIEW
  INPROGRESS
  COMPLETED
}

model User {
  user_id      Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  firstname    String
  lastname     String?
  username     String   @unique
  phone_number String
  role         Role     @default(USER)
  signature    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  address         Address?
  reports         Report[]         @relation("UserReports")
  verifiedReports Report[]         @relation("VerifierReports")
  reviews         ReportProgress[]

  @@index([email])
}

model Report {
  report_id           Int                @id @default(autoincrement())
  title               String
  description         String             @db.Text
  photoUrl            String
  verification_status VerificationStatus @default(PENDING)
  verification_notes  String?            @db.Text
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt

  address Address?

  author    User @relation("UserReports", fields: [author_id], references: [user_id])
  author_id Int

  verifier    User? @relation("VerifierReports", fields: [verifier_id], references: [user_id])
  verifier_id Int?

  progressUpdates ReportProgress[]

  @@index([author_id])
  @@index([verifier_id])
}

model Address {
  address_id Int      @id @default(autoincrement())
  street     String   @db.Text
  latitude   Float?
  longitude  Float?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  province    Provinces @relation(fields: [province_id], references: [province_id])
  province_id Int
  regency     Regencies @relation(fields: [regency_id], references: [regency_id])
  regency_id  Int

  user      User?   @relation(fields: [user_id], references: [user_id])
  user_id   Int?    @unique
  report    Report? @relation(fields: [report_id], references: [report_id])
  report_id Int?    @unique

  @@index([province_id])
  @@index([regency_id])
}

model ReportProgress {
  report_progress_id Int           @id @default(autoincrement())
  photo_url          String
  progress_notes     String        @db.Text
  stage              ProgressStage @default(REVIEW)
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt

  reviewer    User @relation(fields: [reviewer_id], references: [user_id])
  reviewer_id Int

  report    Report @relation(fields: [report_id], references: [report_id])
  report_id Int

  @@index([reviewer_id])
  @@index([report_id])
}

model Provinces {
  province_id Int    @id @default(autoincrement())
  name        String @unique

  regencies Regencies[]
  addresses Address[]
}

model Regencies {
  regency_id Int    @id @default(autoincrement())
  name       String

  province    Provinces @relation(fields: [province_id], references: [province_id])
  province_id Int

  addresses Address[]

  @@index([province_id])
}
